{
  "_args": [
    [
      {
        "raw": "jspb",
        "scope": null,
        "escapedName": "jspb",
        "name": "jspb",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/dongzhao/Works/Prometheus/Socket"
    ]
  ],
  "_from": "jspb@latest",
  "_id": "jspb@0.0.1",
  "_inCache": true,
  "_location": "/jspb",
  "_npmUser": {
    "name": "pavelpower",
    "email": "pavel-power@yandex.ru"
  },
  "_npmVersion": "1.2.32",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jspb",
    "scope": null,
    "escapedName": "jspb",
    "name": "jspb",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/jspb/-/jspb-0.0.1.tgz",
  "_shasum": "25f21f4b0a8c1444d87f96ba9cc023aa8113e467",
  "_shrinkwrap": null,
  "_spec": "jspb",
  "_where": "/Users/dongzhao/Works/Prometheus/Socket",
  "author": {
    "name": "pavel-power@yandex.ru"
  },
  "bin": {
    "jspb": "index.js"
  },
  "bugs": {
    "url": "https://github.com/pavelpower/jspb/issues"
  },
  "dependencies": {
    "colors": "*",
    "js-yaml": "*"
  },
  "description": "parser pieces for assembly files",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "25f21f4b0a8c1444d87f96ba9cc023aa8113e467",
    "tarball": "https://registry.npmjs.org/jspb/-/jspb-0.0.1.tgz"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/pavelpower/jspb#readme",
  "keywords": [
    "parser",
    "javascript",
    "assembly",
    "files"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "pavelpower",
      "email": "pavel-power@yandex.ru"
    }
  ],
  "name": "jspb",
  "optionalDependencies": {},
  "readme": "jspb\n====\n\nThe parser files to create a workpiece for the builder files.\nReturns an one instance of the file path for the assembly.\nAnd in the reverse order from the input graph.\n\n\n#Sample\n\nread and change file \"settings.yml\"\nsection \"default_params\"\n\n```bash\njspb -d\n```\nor\n\n```bash\n./jspb/index.js -d\n```\n\nYou can use another settings file\n```bash\n./jspb/index.js -s file_path_to_your_settings\n```\n##How work it?\n\nRun with default params look settings.yml\n```bash\n./jspb/index.js >> output.js\n```\nand look file output.js:\n```javascript\n//[4] Event :\n/*borschik:fname:/home/pavpow/Projects/jspb/tests/Event.js*/\n\n//[3] Alert :\n/*borschik:fname:/home/pavpow/Projects/jspb/tests/Alert.js*/\n\n//[2] Ext.grid.Table :\n/*borschik:fname:/home/pavpow/Projects/jspb/tests/grid/Table.js*/\n\n//[2] Row :\n/*borschik:fname:/home/pavpow/Projects/jspb/tests/Row.js*/\n\n//[2] Observer :\n/*borschik:fname:/home/pavpow/Projects/jspb/tests/Observer.js*/\n\n//[1] Ext.lib.Table :\n/*borschik:fname:/home/pavpow/Projects/jspb/tests/lib/Table.js*/\n\n//[1] MessageBox :\n/*borschik:fname:/home/pavpow/Projects/jspb/tests/MessageBox.js*/\n\n//[0] root :\n/*borschik:fname:/home/pavpow/Projects/jspb/tests/TPanel.js*/\n```\n\n\n#Use in node\n\n```javascript\n require('js-yaml');\n // you can read default setting from out file\n var settings = require('./settings.yml');\n\n var _params = settings.default_params;\n\n // _params.temps_read {Array}  sample: [ 'path_to_temp_read {String}', 'path_to_temp_read {String}', .. ]\n //  temp_read - the node module with fn getPath and fn getBlanks\n // _params.temp_write {String} string for output. sample for jossy: //#require:{path}\n // _params.file_path {String} path to file entry-point\n // _params.withPointFile - flag, include entry-point to output?\n\n require('jspb').parse(\n    _params.temps_read,\n    _params.temp_write,\n    _params.file_path,\n    function(result) {\n     var links = this;\n\n     if (!_params.debug) {\n        console.log(result);\n        return;\n     }\n\n     links.forEach(function(link) {\n          console.log('-----link--------');\n          console.log('blank:', link.blank);\n          console.log('path:', link.path);\n          console.log('level:', link.level);\n          console.log('error:', link.error);\n      });\n\n\n }, _params.withPointFile);\n\n```\n\n#LICENSE\nThe MIT License (MIT)\n\nCopyright (c) 2013 Pavel Akhmetchanov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/pavelpower/jspb.git"
  },
  "version": "0.0.1"
}
