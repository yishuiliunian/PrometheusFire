//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 29 2017 15:19:17).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <FTEngine/FLBaseManager.h>

#import <FTEngine/FLHandlerStatusDelegate-Protocol.h>

@class FLAccount, FLLoginClient, FLOrderHandler, FLQuoteHandler, FLSimulationHandler, NSArray, NSDate, NSMutableArray, NSString;
@protocol FLLoginManagerDelegate, FLNetIPStrategy;

@interface FLLoginManager : FLBaseManager <FLHandlerStatusDelegate>
{
    NSMutableArray *_accounts;
    int _loginResultStatus;
    BOOL _firstLogin;
    BOOL _isVerifyingAccount;
    int _connStatus;
    id <FLLoginManagerDelegate> _loginDelegate;
    FLOrderHandler *_orderHandler;
    FLQuoteHandler *_quoteHandler;
    FLSimulationHandler *_simulationHandler;
    id <FLNetIPStrategy> _ipMan;
    NSDate *_nextTryLoginDate;
    NSDate *_nextTryQuoteLoginDate;
    NSString *_tryingServerIP;
    FLAccount *_loginingAccount;
    FLLoginClient *_loginClient;
}

+ (id)defaultManager;
@property BOOL isVerifyingAccount; // @synthesize isVerifyingAccount=_isVerifyingAccount;
@property(readonly, nonatomic) FLLoginClient *loginClient; // @synthesize loginClient=_loginClient;
@property(retain, nonatomic) FLAccount *loginingAccount; // @synthesize loginingAccount=_loginingAccount;
@property(retain, nonatomic) NSString *tryingServerIP; // @synthesize tryingServerIP=_tryingServerIP;
@property(retain) NSDate *nextTryQuoteLoginDate; // @synthesize nextTryQuoteLoginDate=_nextTryQuoteLoginDate;
@property(retain) NSDate *nextTryLoginDate; // @synthesize nextTryLoginDate=_nextTryLoginDate;
@property(nonatomic) int connStatus; // @synthesize connStatus=_connStatus;
@property(retain, nonatomic) id <FLNetIPStrategy> ipMan; // @synthesize ipMan=_ipMan;
@property(retain, nonatomic) FLSimulationHandler *simulationHandler; // @synthesize simulationHandler=_simulationHandler;
@property(retain, nonatomic) FLQuoteHandler *quoteHandler; // @synthesize quoteHandler=_quoteHandler;
@property(retain, nonatomic) FLOrderHandler *orderHandler; // @synthesize orderHandler=_orderHandler;
@property(nonatomic) __weak id <FLLoginManagerDelegate> loginDelegate; // @synthesize loginDelegate=_loginDelegate;
@property(nonatomic) BOOL firstLogin; // @synthesize firstLogin=_firstLogin;
@property(readonly, nonatomic) NSArray *accounts; // @synthesize accounts=_accounts;
- (void).cxx_destruct;
- (void)reconnectHandlersIfNeeded;
- (void)startTryLoginLoop;
- (void)switchLoginServerToIP:(id)arg1;
- (void)configLoginDesignatedUserIP:(id)arg1;
- (void)stopTryLoginLoop;
@property(readonly, nonatomic) BOOL isInternetAvaliable;
- (void)fetchBackIPInfo;
- (id)getGuestAccount;
@property(readonly, nonatomic) FLAccount *currentLoginingAccount;
@property(readonly, nonatomic) FLAccount *lastLoginedAccount;
- (void)saveLogindAccount:(id)arg1;
- (void)deleteAccount:(id)arg1;
- (void)saveAccounts;
- (void)loadAccounts;
@property(readonly, nonatomic) FLLoginClient *currentClient;
- (void)verifyDeviceSMSCode:(id)arg1 deviceVerifySig:(id)arg2 deviceCodeSig:(id)arg3 account:(id)arg4 resultBlock:(CDUnknownBlockType)arg5;
- (void)fetchDeviceSMSCodeWithAccount:(id)arg1 deviceVerifySig:(id)arg2 resultBlock:(CDUnknownBlockType)arg3;
- (void)authenticateAccount:(id)arg1 verifyCode:(id)arg2 verifyKey:(id)arg3 resultBlock:(CDUnknownBlockType)arg4;
- (void)simulatorHandlerDidChangeStatus:(int)arg1 error:(id)arg2;
- (void)quoteHandlerDidChangeStatus:(int)arg1 error:(id)arg2;
- (void)orderHandlerDidChangeStatus:(int)arg1 error:(id)arg2;
- (void)handler:(id)arg1 didChangedConnectionStatus:(int)arg2 error:(id)arg3;
- (void)notifyLoginResult:(int)arg1 message:(id)arg2 context:(id)arg3;
- (void)updateConnectionStatus;
- (void)doConnectAndLoginHandler:(id)arg1 account:(id)arg2;
- (void)reConnectAndLoginSimulationHandlerWithDelay:(unsigned int)arg1;
- (void)reConnectAndLoginQuoteHandlerWithDelay:(unsigned int)arg1;
- (void)reConnectAndLoginOrderHandlerWithDelay:(unsigned int)arg1;
- (void)forceDisconnect;
- (void)stopAllHandlers;
- (void)startAllHandlers;
- (void)logoutRoutine;
- (void)logout;
- (void)loginRoutineWithAccount:(id)arg1;
- (void)changeUserWithAccount:(id)arg1;
- (void)loginAccount:(id)arg1 verifyCode:(id)arg2 verifyKey:(id)arg3;
- (BOOL)isNetworkOKToLoginAccount:(id)arg1;
- (void)forceReLogin;
- (void)loginAccount:(id)arg1;
- (void)onNetworkAvailable:(id)arg1;
- (id)init;

@end

